               icu4e: Erlang NIF wrappers around icu4c
               =======================================

Author: Bryan Fink <bryan@mashtun-2.local>
Date: 2010-11-12 15:48:54 EST


Table of Contents
=================
1 Prerequisites 
2 Configuration 
3 Building 
4 Using 
5 Troubleshooting 
    5.1 .../as: option `-n' is ambiguous 


1 Prerequisites 
~~~~~~~~~~~~~~~~

  To use icu4e, you will need:

  - Erlang/OTP R13B04
  - icu4c version 4.x

2 Configuration 
~~~~~~~~~~~~~~~~

  The 'ustring' module is configured to encode UTF16 in little-endian
  format.  If your ICU installation uses big-endian encoding, edit
  ustring.erl, and change the line:

  ```
  -define(NATIVE, {utf16, little}).
  '''
  
  to read:

  ```
  -define(NATIVE, {utf16, big}).
  '''

3 Building 
~~~~~~~~~~~

  To build icu4e, simply type 'make' at the commandline.

4 Using 
~~~~~~~~

  To use icu4e, start the icu4e application:

  ```
  1> application:start(icu4e).
  ok
  '''

  Then make calls to the ustring module:

  ```
  2> S = ustring:new("hello", latin1).
  104,0,101,0,108,0,108,0,111,0
  3> U = ustring:toupper(S).
  72,0,69,0,76,0,76,0,79,0
  4> unicode:characters_to_binary(U, ustring:encoding(), latin1).
  "HELLO"
  '''

5 Troubleshooting 
~~~~~~~~~~~~~~~~~~

5.1 .../as: option `-n' is ambiguous 
=====================================

   The correct way to ask 'echo' to omit its trailing newline is not
   consistent across platforms.  If you find the build process
   complaining about random "-n" commandline flags, edit your copy of
   the icu-config script.  You should find two lines that look like:

   ```
   ECHO_N="-n"
   ECHO_C=""
   '''

   Change these lines to look like this:

   ```
   ECHO_N=""
   ECHO_C="\c"
   '''
